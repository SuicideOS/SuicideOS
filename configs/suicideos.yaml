# {{- $image := or .image "suicideos-debos.iso" }}

# {{- $arch := or .arch "amd64" }}
# {{- $kernel_flavour := or .kernel_flavour $arch }}

# {{- $suite := or .suite "byzantium" }}
# {{- $version := or .version "10.0" }}
# {{- $osflavor := or .osflavor "gnome" }}
# {{- $imageflavor := or .imageflavor "live" }}

# {{- $mirror := or .mirror "https://deb.debian.org/debian" }}

architecture: "{{ $arch }}"

actions:
  - action: debootstrap
    suite: "{{ $suite }}"
    components:
      - main
      - non-free
    mirror: "{{ $mirror }}"

  - action: run
    description: Set up APT sources
    chroot: true
    script: |
      scripts/os/setup-apt-sources.sh {{ $mirror }} {{ $suite }}

  #
  # Install OS packages
  #
  # {{ if eq $osflavor "gnome" }}
  - action: apt
    recommends: true
    packages: [suicideos-gnome, adwaita-qt]
  # {{ else if eq $osflavor "plasma" }}
  - action: apt
    recommends: true
    packages: [suicideos-plasma]
  # {{ end }}

  - action: apt
    recommends: true
    packages:
      [
        "systemd-sysv",
        "linux-image-{{ $kernel_flavour }}",
        "casper",
        "squashfs-tools",
      ]

  # {{ if eq $imageflavor "oem" }}
  - action: apt
    packages: [calamares-suicideos-oem]
  # {{ else }}
  - action: apt
    packages: [calamares]
  # {{ end }}

  # {{ if eq $arch "amd64" }}
  - action: apt
    recommends: true
    packages:
      [
        isolinux,
        syslinux-efi,
        grub-pc-bin,
        grub-efi-amd64-bin,
        grub2-common,
        grub-gfxpayload-lists,
      ]
  # {{ else if eq $arch "arm64" }}
  - action: apt
    recommends: true
    packages: [grub-uboot-bin, grub2-common]
  # {{ end }}

  - action: run
    chroot: true
    command: |
      apt clean

  #
  # Configure the OS image
  #
  - action: run
    chroot: true
    command: |
      echo suicideos > /etc/hostname

  - action: run
    chroot: true
    script: |
      scripts/os/01-set-locale.sh

  - action: run
    chroot: true
    script: |
      scripts/os/02-plymouth-theme.sh

  - action: run
    chroot: true
    script: |
      scripts/os/03-command-not-found.sh

  - action: run
    chroot: true
    script: |
      scripts/os/04-apt-appstream.sh

  # {{ if eq $imageflavor "oem" }}
  - action: run
    chroot: true
    script: |
      scripts/os/oem/01-setup-oem.sh

  - action: overlay
    source: overlays/oem/
  # {{ end }}

  - action: run
    chroot: true
    script: |
      scripts/os/05-package-hacks.sh

  #
  # Finish OS image configuration
  #
  - action: run
    description: Update initramfs
    label: update-initramfs
    chroot: true
    command: |
      CASPER_GENERATE_UUID=1 update-initramfs -k all -t -u

  - action: run
    description: Collect infos & logs
    label: collect-logs
    chroot: true
    script: |
      scripts/os/collect-logs.sh

  #
  # Create ISO image contents
  #
  - action: run
    label: cleanup
    command: |
      rm -rf "$ARTIFACTDIR/disk-ws-tmp/"

  - action: run
    label: make-ws
    command: |
      bash -c 'mkdir -p $ARTIFACTDIR/disk-ws-tmp/{contents/{EFI/boot,boot/grub/x86_64-efi,isolinux,casper},tmp}'

  - action: run
    description: Copy kernel & initramfs
    label: copy-kernel-initramfs
    script: |
      scripts/disk/copy-kernel-initramfs.sh

  # {{ if eq $arch "amd64" }}
  - action: run
    description: Copy bootloaders
    label: copy-bootloaders
    script: |
      scripts/disk/copy-bootloaders.sh
  # {{ end }}

  - action: run
    description: Create SquashFS image
    label: make-squashfs
    command: |
      |
      mksquashfs \
        $ROOTDIR \
        $ARTIFACTDIR/disk-ws-tmp/contents/casper/filesystem.squashfs \
        -e build-info \
        -comp zstd

  - action: run
    label: copy-package-list
    command: |
      cp $ROOTDIR/build-info/packages.manifest $ARTIFACTDIR/disk-ws-tmp/contents/casper/filesystem.manifest

  # {{ if eq $arch "amd64" }}
  - action: run
    description: Make bootloader config files
    label: make-bootloader-config
    script: |
      scripts/disk/make-bootloader-config.sh {{ $imageflavor }} {{ $version }}

  - action: run
    description: Create UEFI boot disk image
    label: make-uefi-boot-disk
    script: |
      scripts/disk/make-uefi-boot-disk.sh
  # {{ end }}

  - action: run
    description: Setup disk info
    label: setup-disk-info
    script: |
      scripts/disk/setup-disk-info.sh {{ $suite }} {{ $version }} {{ $arch }}

  #
  # Write image
  #
  - action: run
    description: Create hybrid ISO image
    label: make-isohybrid
    command: |
      |
      xorriso \
        -as mkisofs \
        -iso-level 3 \
        -o "$ARTIFACTDIR/{{ $image }}" \
        -full-iso9660-filenames \
        -volid "SuicideOS {{ $version }} {{ $osflavor }} ({{ $imageflavor }})" \
        -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin \
        -eltorito-boot isolinux/isolinux.bin \
          -no-emul-boot \
          -boot-load-size 4 \
          -boot-info-table \
          --eltorito-catalog isolinux/isolinux.cat \
        -eltorito-alt-boot \
          -e /EFI/boot/efiboot.img \
          -no-emul-boot \
          -isohybrid-gpt-basdat \
        -append_partition 2 0xef $ARTIFACTDIR/disk-ws-tmp/contents/EFI/boot/efiboot.img \
        $ARTIFACTDIR/disk-ws-tmp/contents

  - action: run
    label: cleanup
    command: |
      rm -rf "$ARTIFACTDIR/disk-ws-tmp/"
